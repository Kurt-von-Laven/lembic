<% @title = "Edit Block" %>
<h1>View Editor: Edit Block</h1>
<h4> FYI, this doesn't work yet. </h4>
<p> Think of a block as a set of variables that are connected in relationships, or are generally measured together. For instance, you might have a block of general measurements, or a block that is only filled out in certain circumstance. Add variables to the "Measure" Box to add the variables to the block. Define relationships using the "Logic" Box. For instance you might use the logic box to say "If VAR1 = TRUE and VAR2 > 10, DO Block <name>", or "If VAR1 = TRUE, FIND VAR2".</p>

<%= render "current_variables" %>

<%= render "current_blocks" %>


<h3> Create A Block </h3>
 <%= form_for(:create_block_form) do |f| %>
 <div>
            <%= f.label(:name, "Name of Block: ") %><br/>
            <%= f.text_field :name %>
    
 </div>
<div>
            <%= f.label(:inputs_string, "Measure these variables, one per line: ") %><br/>
            <%= f.text_area :inputs_string %>
</div>
<div>
            <%= f.label(:connections_string, "Block connections, one per line:\nExample: 'AC_Block => has_ac == true' or 'FINISH => 1'") %><br/>
            <%= f.text_area :connections_string %>
</div>
            <%= f.submit('Create Block', :class => "button") %>         
<% end %>        



<h3> TODO PRINT ALL OUTPUTS ALREADY ASSIGNED </h3>

<h3> Done Creating Blocks? Choose Output </h3>



<%= form_for(:outputs) do |f| %>
<div>
            <%= f.label(:output_variables, "Output these variables: ") %>
            <%= f.text_area (:output_variables) %>
</div>
<div>   
            <%= f.label(:show_as_type, "Display Type:") %>
            <%= f.select(:show_as_type, [['Graph', 'graph'], ['Integer',
            'integer'], ['Percentage', 'percent']]) %>
    </p>
    <p>
</div>
            <%= f.submit('Add Output', :class => "button") %>
<% end %>



<h3> See the Workflow </h3>
<h4> Currently redirects to the empty expert workflow page. </h4>
<h5> Implementation: </h5>
<p>
Each block appears in its own tab, using JQuery. All blocks appear, but some will be grayed out. This means that logic statements have be parsed and translated. As the associated variables are filled in, the if statements are evaluated. If the statement is true, the view updates to include a new  section(google form style if we can make it happen), or ungrays a block. Blocks that do not have all necessary variables filled in will be red. As soon as all variables are satisified, it will turn blue. The finish button will always be present (maybe at the bottom left) but will be disabled until all necessary values have been filled in. Time and date variables will have associated sliders (Jquery). Categorial will have check boxes (Jquery). Done will redirect simplified evaluator page. 
</p>
<%= button_to "View Workflow", "/workflow",
              {:confirm => "Are you sure you are ready to leave this page?",
               :method => :delete, :class => "button"} %>
